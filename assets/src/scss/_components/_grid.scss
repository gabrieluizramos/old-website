
/************************************************** GRID ***********************************/
$responsive: 1; // 0 fixed ~ 1 responsive
$wrapper: 1174;
$grid-columns: 12;
$grid-gutter: 10;

/************************************************** ESTRUCTURE ********************/
.wrapper{
	margin: auto;
	width: 95%;
	max-width: $wrapper + 0px;
	display: block;
}

.grid{
	float: left;
}


.clearfix{
	&:after{
		content: '';
		clear: both;
		height: 0;
		display: block;
		width: 100%;
	}
}

.text-center{
	text-align:center;
}

.block{
	display:block;
}

.relative{
	position:relative;
}

.clear{
	clear: both;
	float: none !important;
	@extend .clearfix;
}

.both{
	@extend .clear;
}

.spaceblock{
	width:100%;
	height:1em;
	clear: both;
	float: none !important;
}

.center{
	margin: auto !important;
	display: block !important;
	float: none !important;
	max-width: 100%;
}

.left{
	float: left !important;
}

.right{
	float: right !important;
}

/************************************************** CORE ********************/
@if $responsive == 0 {
	$grid-master: ($wrapper - (($grid-columns - 1) * $grid-gutter));
	$grid-width: $grid-master / $grid-columns;
	
	.wrapper{
		@extend .wrapper;
		width: $wrapper + 0px;
	}

	.grid{
		margin-right: $grid-gutter + 0px;
		@extend .grid;
	}

	@for $i from 1 through $grid-columns{
		.grid-#{$i}{
			width: ($grid-width * $i) + ($grid-gutter * ($i - 1)) + 0px;
		}

		.grid-offset-#{$i}{
			margin-left: ($grid-width * $i) + ($grid-gutter * $i) + 0px;
		}

		.wd-#{$i}{
			width: ($grid-width * $i) + ($grid-gutter * ($i - 1)) + 0px;
		}
	}

	}@else{
		.wrapper{
			@extend .wrapper;
			width: 95%;
			max-width: $wrapper + 0px;
		}

	//Smartphone
	@media screen and (max-width: 540px){
		@for $i from 1 through $grid-columns{
			.grid-#{$i}, .wd-#{$i}{
				width: 100%;
			}
		}

		// Use it to hide elements only on smartphone
		.no-smartphone{
			display: none;
		}
	}

	//Tablet
	@media screen and (min-width: 541px) and (max-width: 1023px){
		@for $i from 1 through $grid-columns{
			$grid-width: ( ( $wrapper - ( ( $grid-columns - 1 ) * $grid-gutter ) ) / $grid-columns ) * $i !global;

			.grid-#{$i}{
				width: 49%;

				&:nth-child(odd){
					margin-right: percentage( ( $grid-gutter / $wrapper ));
				}
			}

			.wd-#{$i}{
				width: 49%;

				&:nth-child(odd){
					margin-right: percentage( ( $grid-gutter / $wrapper ));
				}
			}

			// Use it to add spaces in the elements
			.grid-offset-#{$i}{
				margin-left: percentage( ( $grid-width + $i * $grid-gutter ) / $wrapper );
			}
		}

		// Use it to make full columns only on Tablet
		.grid-tablet{
			width: 100%;
		}

		// Use it to hide elements only on Tablet
		.no-tablet{
			display: none;
		}
	}

	//Desktop
	@media screen and (min-width: 1024px){
		.grid{
			&:last-child, &-last{
				margin-right: 0 !important;
			}
		}

		@for $i from 1 through $grid-columns{
			$grid-width: ( ( $wrapper - ( ( $grid-columns - 1 ) * $grid-gutter ) ) / $grid-columns ) * $i !global;

			.grid-#{$i}{
				margin-right: percentage( ( $grid-gutter / $wrapper ));
				width: percentage( ( $grid-width + ( ( $i - 1 ) * $grid-gutter ) ) / $wrapper );
			}

			.wd-#{$i}{
				width: percentage( ( $grid-width + ( $i - 1 ) * $grid-gutter ) / $wrapper );
			}

			// Use it to add spaces in the elements
			.grid-offset-#{$i}{
				margin-left: percentage( ( $grid-width + $i * $grid-gutter ) / $wrapper );
			}
		}
	}
}

